# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: e2e test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest

    steps:      
    - uses: actions/checkout@v4

    # This is not optimized, as it will completely rebuild docker images despite the changes.
    # Instead this could be improved in the following way:
    # 1. Build only necessary server or client docker image, depending where push or pull_request happened
    # 2. Run e2e tests with latest builds (from Docker Hub or local)
    # 3. If tests pass, login to Docker Hub and push new image(s)
    - name: Run docker-compose
      uses: hoverkraft-tech/compose-action@v2.0.1
      with:
        compose-file: "./compose.yaml"

    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16' # Adjust version as needed

    - name: Install dependencies
      run: |
        cd e2e_tests
        npm install # Install Node.js dependencies

    - name: Run e2e tests
      env:
        GOOGLE_SERVICE_ACCOUNT_KEY: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}
      run: |
        cd e2e_tests
        npm test # Execute your tests
