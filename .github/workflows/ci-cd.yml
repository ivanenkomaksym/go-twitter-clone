name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  DOCKER_USER: ${{ secrets.DOCKER_USER }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  build-server:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.2'
        check-latest: true

    - name: Build
      run: go build -v ./...

    - name: Run tests
      run: go test ./... -v

  build-client:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: ./twitter-clone-client/package-lock.json

    - run: npm ci
      working-directory: ./twitter-clone-client

    - run: npm run build --if-present
      working-directory: ./twitter-clone-client

    - run: npm test
      working-directory: ./twitter-clone-client

  e2e-tests:
    runs-on: ubuntu-latest
    needs: [build-client, build-server]

    steps:
    - uses: actions/checkout@v4

    - name: Run docker-compose
      uses: hoverkraft-tech/compose-action@v2.0.1
      with:
        compose-file: "./compose.yaml"
      env:
        CLIENT_IMAGE: ivanenkomak/twitter-clone-client:latest
        SERVER_IMAGE: ivanenkomak/twitter-clone-server:latest
        PROJECT_ID: ${{ secrets.PROJECT_ID }}
        OAUTH2_CLIENT_ID: ${{ secrets.OAUTH2_CLIENT_ID }}
        OAUTH2_CLIENT_SECRET: ${{ secrets.OAUTH2_CLIENT_SECRET }}

    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Install dependencies
      run: |
        cd e2e_tests
        npm install

    - name: Run e2e tests
      env:
        GOOGLE_SERVICE_ACCOUNT_KEY: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}
      run: |
        cd e2e_tests
        npm test

  push-images:
    runs-on: ubuntu-latest
    needs: e2e-tests
    if: success()

    steps:
    - uses: actions/checkout@v4

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKER_USER }}
        password: ${{ env.DOCKER_PASSWORD }}

    - name: Push server image
      run: |
        IMAGE_TAG="ivanenkomak/twitter-clone-server:latest"
        DOCKERFILE="Dockerfile"
        echo "Pushing Docker image with latest tag: ${IMAGE_TAG}"
        docker buildx build -t "${IMAGE_TAG}" --file "${DOCKERFILE}" . --push

    - name: Push client image
      run: |
        IMAGE_TAG="ivanenkomak/twitter-clone-client:latest"
        DOCKERFILE="Dockerfile"
        echo "Pushing Docker image with latest tag: ${IMAGE_TAG}"
        docker buildx build -t "${IMAGE_TAG}" --file "${DOCKERFILE}" twitter-clone-client --push