# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: my-secret-pw
          MYSQL_USER: myuser
          MYSQL_PASSWORD: mypassword
          MYSQL_DATABASE: Tests_TweetsDb
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
          
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.2'
        check-latest: true

    - name: Build
      run: go build -v ./...

    - name: Run tests
      run: go test ./... -v
      
    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Run Docker Compose
      run: |
        docker-compose up -d # Start containers in detached mode
        sleep 10 # Optional: wait for services to initialize

    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16' # Adjust version as needed

    - name: Install dependencies
      run: |
        cd e2e_tests
        npm install # Install Node.js dependencies

    - name: Run e2e tests
      run: |
        cd e2e_tests
        npm test # Execute your tests

    - name: Tear down Docker Compose
      if: always() # Ensure it runs even if previous steps fail
      run: docker-compose down
