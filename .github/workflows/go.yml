# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongo --eval 'db.runCommand({ping: 1})'" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: my-secret-pw
          MYSQL_USER: myuser
          MYSQL_PASSWORD: mypassword
          MYSQL_DATABASE: Tests_TweetsDb
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
          
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Build
      run: go build -v ./...

    - name: Wait for MongoDB to be ready
      run: |
        until docker exec twitter-mongo mongosh --eval "db.runCommand({ ping: 1 })"; do
          echo "Waiting for MongoDB to be ready..."
          sleep 2
        done

    - name: Wait for MySQL to be ready
      run: |
        until docker exec twitter-mysql-test mysqladmin ping --host=localhost --user=myuser --password=mypassword --silent; do
          echo "Waiting for MySQL to be ready..."
          sleep 2
        done

    - name: Run tests
      run: go test ./... -v
